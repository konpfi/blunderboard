stages:
  - build
  - deploy

# 1) Images bauen und in GitLab Registry pushen
build:
  stage: build
  image: docker:27
  services:
    - docker:dind
  variables:
    DOCKER_TLS_CERTDIR: ""   # nötig für dind ohne TLS
  script:
    # Registry-Login
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"

    # API-Image bauen & pushen
    - docker build -t "$CI_REGISTRY_IMAGE/api:latest" ./api
    - docker push "$CI_REGISTRY_IMAGE/api:latest"

    # Analyzer-Image bauen & pushen
    - docker build -t "$CI_REGISTRY_IMAGE/analyzer:latest" ./analyzer
    - docker push "$CI_REGISTRY_IMAGE/analyzer:latest"

# 2) Deployment auf den Server
deploy:
  stage: deploy
  image: alpine:3.19
  before_script:
    - apk add --no-cache openssh-client bash coreutils rsync
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY_B64" | base64 -d > ~/.ssh/id_ed25519
    - chmod 600 ~/.ssh/id_ed25519
    - ssh-keygen -lf ~/.ssh/id_ed25519 || (echo "Invalid SSH key" && exit 1)
  script:
    # 1) Verbindung & Zielstruktur
    - ssh -o IdentitiesOnly=yes -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no "$SSH_USER@$SSH_HOST" 'hostname && whoami'
    - ssh -o IdentitiesOnly=yes -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no "$SSH_USER@$SSH_HOST" 'mkdir -p ~/blunderboard ~/blunderboard/monitoring ~/blunderboard/db ~/blunderboard/data/inbox'

    # 2) Compose + notwendige Dateien rüber
    - scp   -o IdentitiesOnly=yes -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no docker-compose.yml "$SSH_USER@$SSH_HOST:~/blunderboard/docker-compose.yml"
    - rsync -az --delete -e "ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no" monitoring/ "$SSH_USER@$SSH_HOST:~/blunderboard/monitoring/"
    - rsync -az --delete -e "ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no" db/         "$SSH_USER@$SSH_HOST:~/blunderboard/db/"

    # 3) Login in Registry + Compose ausführen
    - |
      ssh -o IdentitiesOnly=yes -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no "$SSH_USER@$SSH_HOST" "bash -lc '
        set -e
        cd ~/blunderboard
        export API_IMAGE=\"$CI_REGISTRY_IMAGE/api\"
        export ANALYZER_IMAGE=\"$CI_REGISTRY_IMAGE/analyzer\"
        export POSTGRES_PASSWORD=\"$POSTGRES_PASSWORD\"
        echo \"$CI_REGISTRY_PASSWORD\" | docker login -u \"$CI_REGISTRY_USER\" --password-stdin \"$CI_REGISTRY\"
        docker compose pull
        docker compose up -d
      '"
